{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/finalthesisfrontend/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\n// src/pages/LoginPage.js\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../assets/styles/LoginPage.css'; // Make sure to import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = 'http://localhost:8080';\nfunction togglePassword() {\n  let password = document.getElementById(\"passwordInput\");\n  if (password.type === \"password\") {\n    password.type = \"text\";\n  } else {\n    password.type = \"password\";\n  }\n}\nfunction LoginPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation(); // get current location\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${apiUrl}/api/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const token = data.token;\n        const role = data.role;\n        if (token) {\n          var _location$state;\n          localStorage.setItem('jwtToken', token);\n          localStorage.setItem('userRole', role);\n          toast.success('Login successful');\n\n          // Check if there is a guest cart in localStorage (if you're storing it there)\n          const guestCart = JSON.parse(localStorage.getItem('guestCart')) || null;\n          if (guestCart && guestCart.items && guestCart.items.length > 0) {\n            // Call the merge guest cart API\n            try {\n              const mergeResponse = await fetch(`${apiUrl}/api/cart/merge-guest-cart`, {\n                method: 'POST',\n                headers: {\n                  'Content-type': 'application/json',\n                  'Authorization': 'Bearer ' + token\n                },\n                body: JSON.stringify(guestCart)\n              });\n              if (mergeResponse.ok) {\n                const mergedCartData = await mergeResponse.json();\n                // Guest cart has been merged, remove it from localStorage\n                localStorage.removeItem('guestCart');\n                // Optionally, show a toast or handle mergedCartData as needed\n              } else {\n                const mergeError = await mergeResponse.text();\n                toast.error(`Failed to merge guest cart: ${mergeError}`);\n              }\n            } catch (mergeError) {\n              console.error('Error merging guest cart:', mergeError);\n              toast.error('Error merging guest cart');\n            }\n          }\n          const redirectTo = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.redirectTo) || '/HomePage';\n          navigate(redirectTo);\n        } else {\n          toast.error('Token not found');\n        }\n      } else if (response.status === 401) {\n        toast.error('Incorrect Password. Please try again.');\n      } else {\n        const textError = await response.text();\n        toast.error(`Login failed: ${textError}`);\n      }\n    } catch (e) {\n      console.error(\"Error\", e);\n      toast.error('Error occurred logging in');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email or Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Email/Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter your password\",\n          value: password,\n          id: \"passwordInput\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show-password\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: togglePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Show Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"8iuj56DQbjOZaSpAREM6vDsJrS4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","toast","ToastContainer","jsxDEV","_jsxDEV","apiUrl","togglePassword","password","document","getElementById","type","LoginPage","_s","username","setUsername","setPassword","navigate","location","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","token","role","_location$state","localStorage","setItem","success","guestCart","parse","getItem","items","length","mergeResponse","mergedCartData","removeItem","mergeError","text","error","console","redirectTo","state","status","textError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","id","onClick","position","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/finalthesisfrontend/src/pages/LoginPage.js"],"sourcesContent":["// src/pages/LoginPage.js\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router'\n\nimport { useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../assets/styles/LoginPage.css'; // Make sure to import the CSS file\n\nconst apiUrl = 'http://localhost:8080';\n\nfunction togglePassword(){\n    let password = document.getElementById(\"passwordInput\");\n    if(password.type === \"password\"){\n        password.type = \"text\";\n    }else{\n        password.type = \"password\";\n    }\n}\n\nfunction LoginPage() {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n    const location = useLocation(); // get current location\n\n\n    const handleLogin = async (e) => {        \n        e.preventDefault();\n        try {\n            const response = await fetch(`${apiUrl}/api/auth/login`, {\n                method: 'POST',\n                headers: { 'Content-type': 'application/json' },\n                body: JSON.stringify({ username, password }),\n            });\n            if(response.ok) {\n                const data = await response.json();\n                const token = data.token;\n                const role = data.role;\n                if(token) {\n                    localStorage.setItem('jwtToken', token);\n                    localStorage.setItem('userRole', role);  \n                    toast.success('Login successful');\n                    \n                    // Check if there is a guest cart in localStorage (if you're storing it there)\n                    const guestCart = JSON.parse(localStorage.getItem('guestCart')) || null;\n                    if (guestCart && guestCart.items && guestCart.items.length > 0) {\n                        // Call the merge guest cart API\n                        try {\n                            const mergeResponse = await fetch(`${apiUrl}/api/cart/merge-guest-cart`, {\n                                method: 'POST',\n                                headers: {\n                                    'Content-type': 'application/json',\n                                    'Authorization': 'Bearer ' + token\n                                },\n                                body: JSON.stringify(guestCart),\n                            });\n                \n                            if (mergeResponse.ok) {\n                                const mergedCartData = await mergeResponse.json();\n                                // Guest cart has been merged, remove it from localStorage\n                                localStorage.removeItem('guestCart');\n                                // Optionally, show a toast or handle mergedCartData as needed\n                            } else {\n                                const mergeError = await mergeResponse.text();\n                                toast.error(`Failed to merge guest cart: ${mergeError}`);\n                            }\n                        } catch (mergeError) {\n                            console.error('Error merging guest cart:', mergeError);\n                            toast.error('Error merging guest cart');\n                        }\n                    }\n                \n                    const redirectTo = location.state?.redirectTo || '/HomePage';\n                    navigate(redirectTo);  \n                } else {\n                    toast.error('Token not found');\n                }                \n            } else if(response.status === 401) {\n                toast.error('Incorrect Password. Please try again.');\n            } else {\n                const textError = await response.text();\n                toast.error(`Login failed: ${textError}`);\n            }\n        } catch (e) {\n            console.error(\"Error\", e);\n            toast.error('Error occurred logging in');\n        }\n    };\n\n    return (\n        <div className=\"login-container\">\n            <h2>Sign in</h2>\n            <form onSubmit={handleLogin}>\n                <div className=\"form-group\">\n                    <label>Email or Username</label>\n                    <input \n                        type=\"text\"\n                        placeholder=\"Email/Username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input \n                        type=\"password\"\n                        placeholder=\"Enter your password\"\n                        value={password}\n                        id=\"passwordInput\"\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </div>\n                <div className=\"show-password\">\n                    <input type=\"checkbox\" onClick={togglePassword} />\n                    <label>Show Password</label>\n                </div>\n                <button type=\"submit\" className=\"submit-button\">Login</button>\n            </form>\n            <ToastContainer position=\"top-center\" />\n        </div>\n    );\n}\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
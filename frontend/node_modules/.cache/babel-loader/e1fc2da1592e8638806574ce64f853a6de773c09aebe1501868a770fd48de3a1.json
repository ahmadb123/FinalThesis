{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/finalthesisfrontend/src/components/Breadcrumb.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"../assets/styles/Breadcrumb.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = \"http://localhost:8080\";\nconst Breadcrumb = ({\n  customName\n}) => {\n  _s();\n  const location = useLocation();\n  const pathnames = location.pathname.split(\"/\").filter(x => x);\n  const [dynamicName, setDynamicName] = useState(null);\n  useEffect(() => {\n    // Fetch item name dynamically if route matches `/view-item/:id` and no customName is provided\n    const fetchItemName = async () => {\n      if (pathnames[0] === \"view-item\" && pathnames[1] && !customName) {\n        try {\n          const response = await fetch(`${apiUrl}/api/items/${pathnames[1]}`);\n          if (response.ok) {\n            const data = await response.json();\n            setDynamicName(data.name);\n          } else {\n            console.error(\"Error fetching item name\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching item name:\", error);\n        }\n      }\n    };\n    fetchItemName();\n  }, [pathnames, customName]);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"breadcrumb\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), pathnames.map((value, index) => {\n      const to = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\n      const isLast = index === pathnames.length - 1;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" / \", isLast && (customName || dynamicName) ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: customName || dynamicName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          to: to,\n          children: value.replace(/-/g, \" \").charAt(0).toUpperCase() + value.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, to, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Breadcrumb, \"lxOKzWpxEWI+cvfCQe/BnYeKYN8=\", false, function () {\n  return [useLocation];\n});\n_c = Breadcrumb;\nexport default Breadcrumb;\nvar _c;\n$RefreshReg$(_c, \"Breadcrumb\");","map":{"version":3,"names":["React","useEffect","useState","Link","useLocation","jsxDEV","_jsxDEV","apiUrl","Breadcrumb","customName","_s","location","pathnames","pathname","split","filter","x","dynamicName","setDynamicName","fetchItemName","response","fetch","ok","data","json","name","console","error","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","map","value","index","slice","join","isLast","length","replace","charAt","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/finalthesisfrontend/src/components/Breadcrumb.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"../assets/styles/Breadcrumb.css\";\n\nconst apiUrl = \"http://localhost:8080\";\n\nconst Breadcrumb = ({ customName }) => {\n  const location = useLocation();\n  const pathnames = location.pathname.split(\"/\").filter((x) => x);\n  const [dynamicName, setDynamicName] = useState(null);\n\n  useEffect(() => {\n    // Fetch item name dynamically if route matches `/view-item/:id` and no customName is provided\n    const fetchItemName = async () => {\n      if (pathnames[0] === \"view-item\" && pathnames[1] && !customName) {\n        try {\n          const response = await fetch(`${apiUrl}/api/items/${pathnames[1]}`);\n          if (response.ok) {\n            const data = await response.json();\n            setDynamicName(data.name);\n          } else {\n            console.error(\"Error fetching item name\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching item name:\", error);\n        }\n      }\n    };\n\n    fetchItemName();\n  }, [pathnames, customName]);\n\n  return (\n    <nav className=\"breadcrumb\">\n      <Link to=\"/\">Home</Link>\n      {pathnames.map((value, index) => {\n        const to = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\n        const isLast = index === pathnames.length - 1;\n\n        return (\n          <span key={to}>\n            {\" / \"}\n            {isLast && (customName || dynamicName) ? (\n              <span>{customName || dynamicName}</span>\n            ) : (\n              <Link to={to}>\n                {value.replace(/-/g, \" \").charAt(0).toUpperCase() + value.slice(1)}\n              </Link>\n            )}\n          </span>\n        );\n      })}\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
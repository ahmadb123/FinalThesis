{"ast":null,"code":"// src/utils/addToCart.js\n\nexport const addToCart = async (itemId, userId) => {\n  const apiUrl = 'http://localhost:8080';\n  try {\n    const response = await fetch(`${apiUrl}/api/cart/add-item`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + userId\n      },\n      body: JSON.stringify({\n        id: itemId\n      })\n    });\n    if (response.ok) {\n      // Handle success (e.g., show a success message)\n    } else {\n      // Handle failure\n    }\n  } catch (e) {\n    console.error(\"Error adding item to cart:\", e);\n    // Handle error\n  }\n};","map":{"version":3,"names":["addToCart","itemId","userId","apiUrl","response","fetch","method","headers","body","JSON","stringify","id","ok","e","console","error"],"sources":["/Users/ahmadbishara/Desktop/finalThesis/frontend/src/utils/addToCart.js"],"sourcesContent":["\n// src/utils/addToCart.js\n\nexport const addToCart = async (itemId, userId) => {\n  const apiUrl = 'http://localhost:8080';\n  try {\n    const response = await fetch(`${apiUrl}/api/cart/add-item`, { \n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + userId,\n      },\n      body: JSON.stringify({ id: itemId }),\n    });\n    if (response.ok) {\n      // Handle success (e.g., show a success message)\n    } else {\n      // Handle failure\n    }\n  } catch (e) {\n    console.error(\"Error adding item to cart:\", e);\n    // Handle error\n  }\n};"],"mappings":"AACA;;AAEA,OAAO,MAAMA,SAAS,GAAG,MAAAA,CAAOC,MAAM,EAAEC,MAAM,KAAK;EACjD,MAAMC,MAAM,GAAG,uBAAuB;EACtC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGF,MAAM,oBAAoB,EAAE;MAC1DG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAAS,GAAGL;MAC/B,CAAC;MACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,EAAE,EAAEV;MAAO,CAAC;IACrC,CAAC,CAAC;IACF,IAAIG,QAAQ,CAACQ,EAAE,EAAE;MACf;IAAA,CACD,MAAM;MACL;IAAA;EAEJ,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,CAAC,CAAC;IAC9C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}